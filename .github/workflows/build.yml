name: Build

on:
  workflow_dispatch:
  push:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: [ ubuntu-latest ]
    container: almalinux:9
    env:
      python-version: 3.12

    steps:
      - name: Prepare
        run: |
          export LANG=en_US.UTF-8
          echo "export LANG=en_US.UTF-8" >> ~/.bashrc
          dnf install -y findutils git make python${{ env.python-version }} zip
          echo "--- Git version ---"
          git --version
          echo "--- Python version ---"
          python${{ env.python-version }} --version
          cd ${GITHUB_WORKSPACE}

      - name: a
        run: |
          echo '---1------'
          pwd
          echo '---2------'
          ls -l
          echo '---3------'
          ls -l /opt
          echo '---4------'
          cat /etc/os-release
          echo '---5------'
          cd ${GITHUB_WORKSPACE}
          git status || true
          echo '---6------'
          ls -l ${GITHUB_WORKSPACE} || true
          echo '---7------'

      - name: Checkout
        uses: actions/checkout@v4

      - name: b
        run: |
          echo '---1------'
          pwd
          echo '---2------'
          ls -l
          echo '---3------'
          ls -l /opt
          echo '---4------'
          cat /etc/os-release
          echo '---5------'
          cd ${GITHUB_WORKSPACE}
          git status || true
          echo '---6------'
          ls -l ${GITHUB_WORKSPACE} || true
          echo '---7------'

      - name: Setup Node (semantic-release)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: c
        run: |
          echo '---1------'
          pwd
          echo '---2------'
          ls -l
          echo '---3------'
          ls -l /opt
          echo '---4------'
          cat /etc/os-release
          echo '---5------'
          cd ${GITHUB_WORKSPACE}
          git status || true
          echo '---6------'
          ls -l ${GITHUB_WORKSPACE} || true
          echo '---7------'

      - name: Get next version (Semantic Release)
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        with:
          dry_run: true
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: d
        run: |
          echo '---1------'
          pwd
          echo '---2------'
          ls -l
          echo '---3------'
          ls -l /opt
          echo '---4------'
          cat /etc/os-release
          echo '---5------'
          cd ${GITHUB_WORKSPACE}
          git status || true
          echo '---6------'
          ls -l ${GITHUB_WORKSPACE} || true
          echo '---7------'

      - name: Update version
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          sed -i "s|version='0.0.1'|version='${{ steps.semantic.outputs.new_release_version }}'|g" setup.py

      - name: Build
        run: |
          make init VERSION=${{ env.python-version }}
          make build
          make install

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Remove stuff
        if: always()
        run: |
          rm -fr *
          ls -l
